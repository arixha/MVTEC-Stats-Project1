dd <- read.table("owid-covid-data-28112020.csv",header=T);
# wd -> working directory
setwd("/originalData")
dd <- read.table("owid-covid-data-28112020.csv",header=T);
dd <- read.table("originalData/owid-covid-data-28112020.csv",header=T);
library(readr)
owid_covid_data_28112020 <- read_csv("originalData/owid-covid-data-28112020.csv",
col_types = cols(iso_code = col_character(),
continent = col_character(), date = col_date(format = "%Y-%m-%d"),
total_cases = col_number(), new_cases = col_skip(),
new_cases_smoothed = col_skip(),
total_deaths = col_number(), new_deaths = col_skip(),
new_deaths_smoothed = col_skip(),
total_cases_per_million = col_number(),
new_cases_per_million = col_skip(),
new_cases_smoothed_per_million = col_skip(),
total_deaths_per_million = col_number(),
new_deaths_per_million = col_skip(),
new_deaths_smoothed_per_million = col_skip(),
reproduction_rate = col_skip(), icu_patients = col_number(),
icu_patients_per_million = col_number(),
hosp_patients = col_number(), hosp_patients_per_million = col_number(),
weekly_icu_admissions = col_number(),
weekly_icu_admissions_per_million = col_number(),
weekly_hosp_admissions = col_number(),
weekly_hosp_admissions_per_million = col_number(),
total_tests = col_number(), new_tests = col_skip(),
total_tests_per_thousand = col_number(),
new_tests_per_thousand = col_number(),
new_tests_smoothed = col_skip(),
new_tests_smoothed_per_thousand = col_skip(),
tests_per_case = col_skip(), positive_rate = col_number(),
tests_units = col_number(), stringency_index = col_skip(),
population = col_number(), population_density = col_number(),
median_age = col_number(), aged_65_older = col_skip(),
aged_70_older = col_skip(), gdp_per_capita = col_number(),
extreme_poverty = col_number(), cardiovasc_death_rate = col_number(),
diabetes_prevalence = col_number(),
female_smokers = col_skip(), male_smokers = col_skip(),
handwashing_facilities = col_number(),
hospital_beds_per_thousand = col_number(),
life_expectancy = col_number(), human_development_index = col_number()),
na = "NA")
View(owid_covid_data_28112020)
#dd <- read.table("originalData/owid-covid-data-28112020.csv",header=T);
library(readr)
library(readr)
dd <- read_csv("originalData/owid-covid-data-28112020.csv",
col_types = cols(iso_code = col_character(),
continent = col_character(), date = col_date(format = "%Y-%m-%d"),
total_cases = col_number(), new_cases = col_skip(),
new_cases_smoothed = col_skip(),
total_deaths = col_number(), new_deaths = col_skip(),
new_deaths_smoothed = col_skip(),
total_cases_per_million = col_number(),
new_cases_per_million = col_skip(),
new_cases_smoothed_per_million = col_skip(),
total_deaths_per_million = col_number(),
new_deaths_per_million = col_skip(),
new_deaths_smoothed_per_million = col_skip(),
reproduction_rate = col_skip(), icu_patients = col_number(),
icu_patients_per_million = col_number(),
hosp_patients = col_number(), hosp_patients_per_million = col_number(),
weekly_icu_admissions = col_number(),
weekly_icu_admissions_per_million = col_number(),
weekly_hosp_admissions = col_number(),
weekly_hosp_admissions_per_million = col_number(),
total_tests = col_number(), new_tests = col_skip(),
total_tests_per_thousand = col_number(),
new_tests_per_thousand = col_number(),
new_tests_smoothed = col_skip(),
new_tests_smoothed_per_thousand = col_skip(),
tests_per_case = col_skip(), positive_rate = col_number(),
tests_units = col_number(), stringency_index = col_skip(),
population = col_number(), population_density = col_number(),
median_age = col_number(), aged_65_older = col_skip(),
aged_70_older = col_skip(), gdp_per_capita = col_number(),
extreme_poverty = col_number(), cardiovasc_death_rate = col_number(),
diabetes_prevalence = col_number(),
female_smokers = col_skip(), male_smokers = col_skip(),
handwashing_facilities = col_number(),
hospital_beds_per_thousand = col_number(),
life_expectancy = col_number(), human_development_index = col_number()),
na = "NA")
dd <- read.table("originalData/owid-covid-data-28112020.csv",
col_types = cols(iso_code = col_character(),
continent = col_character(), date = col_date(format = "%Y-%m-%d"),
total_cases = col_number(), new_cases = col_skip(),
new_cases_smoothed = col_skip(),
total_deaths = col_number(), new_deaths = col_skip(),
new_deaths_smoothed = col_skip(),
total_cases_per_million = col_number(),
new_cases_per_million = col_skip(),
new_cases_smoothed_per_million = col_skip(),
total_deaths_per_million = col_number(),
new_deaths_per_million = col_skip(),
new_deaths_smoothed_per_million = col_skip(),
reproduction_rate = col_skip(), icu_patients = col_number(),
icu_patients_per_million = col_number(),
hosp_patients = col_number(), hosp_patients_per_million = col_number(),
weekly_icu_admissions = col_number(),
weekly_icu_admissions_per_million = col_number(),
weekly_hosp_admissions = col_number(),
weekly_hosp_admissions_per_million = col_number(),
total_tests = col_number(), new_tests = col_skip(),
total_tests_per_thousand = col_number(),
new_tests_per_thousand = col_number(),
new_tests_smoothed = col_skip(),
new_tests_smoothed_per_thousand = col_skip(),
tests_per_case = col_skip(), positive_rate = col_number(),
tests_units = col_number(), stringency_index = col_skip(),
population = col_number(), population_density = col_number(),
median_age = col_number(), aged_65_older = col_skip(),
aged_70_older = col_skip(), gdp_per_capita = col_number(),
extreme_poverty = col_number(), cardiovasc_death_rate = col_number(),
diabetes_prevalence = col_number(),
female_smokers = col_skip(), male_smokers = col_skip(),
handwashing_facilities = col_number(),
hospital_beds_per_thousand = col_number(),
life_expectancy = col_number(), human_development_index = col_number()),
na = "NA",header=T)
dd <- read.table("originalData/owid-covid-data-28112020.csv", col_types = cols(iso_code = col_character(),continent = col_character(), date = col_date(format = "%Y-%m-%d"), total_cases = col_number(), new_cases = col_skip(), new_cases_smoothed = col_skip()), na = "NA",header=T);
dd <- read.table("originalData/owid-covid-data-28112020.csv", na = "NA",header=T);
dd <- read.table("originalData/owid-covid-data-28112020.csv", na = "NA",header=T);
dd <- read.table("originalData/owid-covid-data-28112020.csv", header=T, sep=",");
ddExtra <- read.table("originalData/country-info-clean-OK.csv",header=T, sep=",");
ddExtra <- read.table("originalData/country-info-clean-OK.csv",header=T, sep=";");
#Has dd the correct number of rows and columns?
dim(dd)
K<-dim(ddExtra)[2]
K<-dim(ddExtra)[2]
K
n<-dim(dd)[1]
n<-dim(dd)[1]
n
K
dim(ddExtra)
#is dd the expected type of object?
class(dd)
#is dd the expected type of object?
class(dd)
#check column contents
names(dd)
View(dd)
#open access by name to columns
attach(dd)
summary(Dictamen)
sapply(dd, class)
dd <- read_excel("originalData/owid-covid-data-131120.xlsx", header=T, sep=",");
dd <- read_excel("originalData/owid-covid-data-131120.xlsx", col_names = TRUE, na="NA");
dd
head(dd)
ddExtra <- read_excel("originalData/country-info-clean.xlsx",col_names = TRUE, na="NA");
#Has dd the correct number of rows and columns?
dim(ddCovid)
ddCovid <- read_excel("originalData/owid-covid-data-131120.xlsx", col_names = TRUE, na="NA");
#Has dd the correct number of rows and columns?
dim(ddCovid)
dim(ddExtra)
n<-dim(ddCovid)[1]
n
n<-dim(ddCovid)[0]
n
n<-dim(ddCovid)[2]
n
#is dd the expected type of object?
class(ddCovid)
class(ddExtra)
#check column contents
names(ddCovid)
View(ddCovid)
#open access by name to columns
attach(ddCovid)
#summary(Dictamen)
#boxplot(Dictamen)
#class(dd[,1])
#class(Dictamen)
sapply(ddCovid, class)
sapply(ddExtra,class)
#open access by name to columns
attach(ddCovid)
names(ddCovid)
class(ddCovid[,6])
names(ddCovid)
sapply(ddCovid, class)
sapply(ddCovid)
sapply(ddCovid, class)
?attach
#open access by name to columns
attach(ddCovid)
v
attach(ddExtra)
#open access by name to columns
attach(ddCovid)
attach(ddExtra)
sapply(ddExtra,class)
#summary(Dictamen)
#boxplot(Dictamen)
#class(dd[,1])
#class(Dictamen)
sapply(ddCovid, class)
HospitalAdmisions <- as.factor(weekly_hosp_admissions)
# R knows that Dictament is not numeric now
mean(HospitalAdmisions)
# R knows that Dictament is not numeric now
mean(HospitalAdmisions)
class(HospitalAdmisions)
HospitalAdmisions <- as.numeric(weekly_hosp_admissions)
# R knows that Dictament is not numeric now
mean(HospitalAdmisions)
class(HospitalAdmisions)
table(HospitalAdmisions)
levels(HospitalAdmisions)
sapply(HospitalAdmisions)
sapply(HospitalAdmisions,class)
class(HospitalAdmisions)
summary(HospitalAdmisions)
View(ddCovid)
summary(ddCovid$weekly_hosp_admissions)
#is dd the expected type of object?
class(ddCovid)
data <- read.csv("originalData/owid-covid-data.csv")
# READING DATA FROM EXCEL/CSV
library(readr);
library(tidyverse)
data <- read.csv("originalData/owid-covid-data.csv")
head(data)   # mostrar 10 1es files cada colm
names(data)  # mostrar nom colm
# is R reading data correctly?
# Has dd the correct number of ROWS and COLUMNS?
dim(data)
# TIPO DE OBJETO DATOS
class(data)
#check column contents
names(data)
#check column contents
View(data)
#open access by name to columns
attach(data)
#summary(Dictamen)
#boxplot(Dictamen)
#class(dd[,1])
#class(Dictamen)
sapply(data, class)
# reduir la bd eliminant colm --> https://www.listendata.com/2015/06/r-keep-drop-columns-from-data-frame.html
data <- subset(data, select = -c(total_cases, new_cases, total_deaths, new_deaths, new_cases_per_million, new_deaths_per_million, icu_patients, hosp_patients, total_tests, new_tests, new_tests_per_thousand, positive_rate:stringency_index, aged_65_older, aged_70_older, extreme_poverty, diabetes_prevalence, female_smokers, male_smokers, life_expectancy, human_development_index))
names(data)  # mostrar nom colm
# reduir la bd eliminant colm --> https://www.listendata.com/2015/06/r-keep-drop-columns-from-data-frame.html
data <- subset(data, select = -c(total_cases, new_cases, total_deaths, new_deaths, new_cases_per_million, new_deaths_per_million, icu_patients, hosp_patients, total_tests, new_tests, new_tests_per_thousand, positive_rate:stringency_index, aged_65_older, aged_70_older, extreme_poverty, diabetes_prevalence, female_smokers, male_smokers, life_expectancy, human_development_index))
names(data)  # mostrar nom colm
## DATES ##
class(data$date)  # --> ha ser data i no caràcter
library(lubridate)
data$date <- ymd(data$date)
class(data$date)
# R knows that Dictament is not numeric now
mean(HospitalAdmisions)
# x saber quants NA hi ha per colm
apply(is.na(data), 2, sum)
#### causes deaths ####
dataDeaths <- read.csv("additionalData/data_mortality_causes_WHO_2016/data_mortality_causes_OK.csv")
head(dataDeaths)
names(dataDeaths)
View(dataDeaths)
dataDeaths <- read_excel("additionalData/data_mortality_causes_WHO_2016/data_mortality_causes_OK.xlsx",col_names = TRUE, na="NA");
#### causes deaths ####
library(readxl)
dataDeaths <- read_excel("additionalData/data_mortality_causes_WHO_2016/data_mortality_causes_OK.xlsx")
View(dataDeaths)
head(dataDeaths)
sapply(dataDeaths, class)
# canviar nom colm
dataDeaths <- rename(dataDeaths, `Both sexes` = BothSexes)
# canviar nom colm
dataDeaths <- rename(dataDeaths, Bothsexes = `Both sexes`)
head(dataDeaths)
View(dataDeaths)
classe(dataDeaths)
class(dataDeaths)
dataDeathsCountriesSelected <- filter(dataDeaths, Country == "Belgium", "Croatia", "Cyprus", "Czech Republic", "Denmark", "Estonia", "France", "Germany", "Iceland", "Ireland", "Latvia", "Lithuania", "Malta", "Netherlands", "Norway", "Portugal", "Romania", "Slovenia", "Spain", "United Kingdom", "United States")
dataDeathsCountriesSelected <- filter(dataDeaths, Country == "Belgium")
View(dataDeaths)
View(dataDeathsCountriesSelected)
dataDeathsCountriesSelected <- filter(dataDeaths, Country %in% c("Belgium", "Croatia", "Cyprus", "Czech Republic", "Denmark", "Estonia", "France", "Germany", "Iceland", "Ireland", "Latvia", "Lithuania", "Malta", "Netherlands", "Norway", "Portugal", "Romania", "Slovenia", "Spain", "United Kingdom", "United States"))
View(dataDeathsCountriesSelected)
dataDeathsCountriesSelected <- filter(dataDeaths, Country %in% c("Belgium", "Croatia", "Cyprus", "Czech", "Denmark", "Estonia", "France", "Germany", "Iceland", "Ireland", "Latvia", "Lithuania", "Malta", "Netherlands", "Norway", "Portugal", "Romania", "Slovenia", "Spain", "United Kingdom", "United States"))
View(dataDeathsCountriesSelected)
dataDeathsCountriesSelected <- filter(dataDeaths, Country %in% c("Belgium", "Croatia", "Cyprus", "Czechia", "Denmark", "Estonia", "France", "Germany", "Iceland", "Ireland", "Latvia", "Lithuania", "Malta", "Netherlands", "Norway", "Portugal", "Romania", "Slovenia", "Spain", "United Kingdom", "United States"))
View(dataDeathsCountriesSelected)
dataDeathsCountriesSelected <- filter(dataDeaths, Country %in% c("Belgium", "Croatia", "Cyprus", "Czechia", "Denmark", "Estonia", "France", "Germany", "Iceland", "Ireland", "Latvia", "Lithuania", "Malta", "Netherlands", "Norway", "Portugal", "Romania", "Slovenia", "Spain", "United Kingdom of Great Britain and Northern Ireland", "United States of America"))
View(dataDeathsCountriesSelected)
# reduir la bd eliminant colm --> https://www.listendata.com/2015/06/r-keep-drop-columns-from-data-frame.html
data <- subset(data, select = c(iso_code, continent, location, date, total_cases, total_cases_per_million, new_cases_smoothed, reproduction_rate, total_deaths, total_deaths_per_million, new_deaths_smoothed, weekly_hosp_admissions_per_million, hospital_beds_per_thousand, population, population_density, median_age, gdp_per_capita))  # mostrar nom colm
data <- read.csv("originalData/owid-covid-data.csv")
head(data)   # mostrar 10 1es files cada colm
names(data)  # mostrar nom colm
#check table
View(data)
# reduir la bd eliminant colm --> https://www.listendata.com/2015/06/r-keep-drop-columns-from-data-frame.html
data <- subset(data, select = c(iso_code, continent, location, date, total_cases, total_cases_per_million, new_cases_smoothed, reproduction_rate, total_deaths, total_deaths_per_million, new_deaths_smoothed, weekly_hosp_admissions_per_million, hospital_beds_per_thousand, population, population_density, median_age, gdp_per_capita))  # mostrar nom colm
head(data)
View(data)
head(data)
View(data)
View(data)
## DATES ##
class(data$date)  # --> ha ser data i no caràcter
library(lubridate)
#data$date <- ymd(data$date)
data$date <- as.Date(data$date, format="%d-%m-%y")
class(data$date)
# x saber quants NA hi ha per colm
apply(is.na(data), 2, sum) # 2 = columnes
View(data)
# reduir la bd eliminant colm --> https://www.listendata.com/2015/06/r-keep-drop-columns-from-data-frame.html
data <- subset(data, select = c(iso_code, continent, location, date, total_cases, total_cases_per_million, new_cases_smoothed, reproduction_rate, total_deaths, total_deaths_per_million, new_deaths_smoothed, weekly_hosp_admissions_per_million, hospital_beds_per_thousand, population, population_density, median_age, gdp_per_capita))  # mostrar nom colm
head(data)
data <- read.csv("originalData/owid-covid-data.csv")
data <- read.csv("originalData/owid-covid-data.csv")
head(data)   # mostrar 10 1es files cada colm
names(data)  # mostrar nom colm
# reduir la bd eliminant colm --> https://www.listendata.com/2015/06/r-keep-drop-columns-from-data-frame.html
data <- subset(data, select = c(iso_code, continent, location, date, total_cases, total_cases_per_million, new_cases_smoothed, reproduction_rate, total_deaths, total_deaths_per_million, new_deaths_smoothed, weekly_hosp_admissions_per_million, hospital_beds_per_thousand, population, population_density, median_age, gdp_per_capita))  # mostrar nom colm
head(data)
library(lubridate)
data$date <- ymd(data$date)
#data$date <- as.Date(data$date, format="%d-%m-%y")
class(data$date)
#data$date <- ymd(data$date)
data$date <- as.Date(data$date, format="%Y-%m-%d")
class(data$date)
head(data)
#data$date <- ymd(data$date)
data$date <- as.Date(data$date, format="%Y-%m-%d")
class(data$date)
View(data)
View(data)
# x saber quants NA hi ha per colm
apply(is.na(data), 2, sum) # 2 = columnes
dataExtra <- read.excel("originallData/country-info.xlsx")
dataExtra <- read_excel("originallData/country-info.xlsx")
dataExtra <- read_excel("originalData/country-info.xlsx")
head(data)   # mostrar 10 1es files c
head(dataExtra)   # mostrar 10 1es files c
dataExtra <- subset(data, select = c(COUNTRY, Government_Type, Corruption_preception))  # mostrar nom colm
head(dataExtra)   # mostrar 10 1es files c
dataExtra <- read_excel("originalData/country-info.xlsx")
head(dataExtra)   # mostrar 10 1es files c
dataExtra <- subset(data, select = c(COUNTRY, Government_Type, Corruption_preception))  # mostrar nom colm
dataExtra <- subset(dataExtra, select = c(COUNTRY, Government_Type, Corruption_preception))  # mostrar nom colm
head(dataExtra)
dataExtra <- rename(dataExtra, country = COUNTRY, gov = Government_Type, corruption = Corruption_preception)
head(dataExtra)
## DATA OBESITY
ob <- read.csv("obesitat.csv")
## DATA OBESITY
ob <- read.csv("additionalData/obesitat.csv")
sapply(ob, class)
# renaming columns
ob <- rename(ob, country = Entity, code = Code, year = Year, share = Prevalence.of.obesity..both.sexes....WHO..2019.)
# taking 2016 year values only
ob <- filter(ob, year==2016)
# removing some rows that don't serve
ob <- ob[!(ob$country=="Africa" | ob$country=="Americas" | ob$country=="Eastern Mediterranean" | ob$country=="Europe" | ob$country=="Global" | ob$country=="South-East Asia" | ob$country=="Western Pacific"),]
head(ob)
### JOIN three datasets
# obesity + info paisos extra
obExtra <- left_join(ob, dataExtra, by = "country")
head(obExtra)
View(data)
View(obExtra)
# obesity + info paisos extra
data <- rename(data, code = iso_code)
dataOk <- left_join(data, obExtra, by = "code")
head(dataOk)
write.csv(dataOk, file = "covidClean.csv")
write.csv(dataOk, file = "preProcessingData/covidCleanObesity.csv")
table(dataOk$continent)
africa <- filter(dataOk, continent == "Africa")
asia <- filter(dataOk, continent == "Asia")
europe <- filter(dataOk, continent == "Europe")
northAmerica <- filter(dataOk, continent == "North America")
sudAmerica <- filter(dataOk, continent == "Sud America")
oceania <- filter(dataOk, continent == "Oceania")
asia <- arrange(asia, desc(total_cases_per_million))
africa <- arrange(asia, desc(total_cases_per_million))
asia <- arrange(asia, desc(total_cases_per_million))
europe <- arrange(asia, desc(total_cases_per_million))
northAmerica <- arrange(asia, desc(total_cases_per_million))
sudAmerica <- arrange(asia, desc(total_cases_per_million))
oceania <- arrange(asia, desc(total_cases_per_million))
View(africa)
View(africa)
class(europe$location)
class(europe$location)
e
europe$location <- as.factor(europe$location)
class(europe$location)
View(europe)
eu10 <- subset(europe, select = c(location, total_cases_per_million))
View(eu10)
View(eu10)
#na.rm = borra los NA
eu10 <- eu10 %>%
group_by(location) %>%
summarise(mean_tcpm = mean(total_cases_per_million, na.rm = TRUE)) %>%
arrange(desc(mean_tcpm))
eu10 <- eu10 %>%
group_by(location) %>%
summarise(mean_tcpm = mean(total_cases_per_million, na.rm = TRUE)) %>%
arrange(desc(mean_tcpm))
africa10 <- africa %>%
group_by(location) %>%
summarise(mean_tcpm = mean(total_cases_per_million, na.rm = TRUE)) %>%
arrange(desc(mean_tcpm))
View(africa10)
View(africa10)
africa$location <- as.factor(africa$location)
View(africa)
#na.rm = borra los NA
eu10 <- eu10 %>%
group_by(location) %>%
summarise(mean_tcpm = mean(total_cases_per_million, na.rm = TRUE)) %>%
arrange(desc(mean_tcpm))
africa10 <- africa %>%
group_by(location) %>%
summarise(mean_tcpm = mean(total_cases_per_million, na.rm = TRUE)) %>%
arrange(desc(mean_tcpm))
africa <- filter(dataOk, continent == "Africa")
asia <- filter(dataOk, continent == "Asia")
europe <- filter(dataOk, continent == "Europe")
northAmerica <- filter(dataOk, continent == "North America")
sudAmerica <- filter(dataOk, continent == "Sud America")
oceania <- filter(dataOk, continent == "Oceania")
africa <- arrange(africa, desc(total_cases_per_million))
View(africa)
asia <- arrange(asia, desc(total_cases_per_million))
europe <- arrange(europe, desc(total_cases_per_million))
northAmerica <- arrange(northAmerica, desc(total_cases_per_million))
sudAmerica <- arrange(sudAmerica, desc(total_cases_per_million))
oceania <- arrange(oceania, desc(total_cases_per_million))
class(europe$location)
europe$location <- as.factor(europe$location)
africa$location <- as.factor(africa$location)
asia$location <- as.factor(asia$location)
asia$location <- as.factor(asia$location)
northAmerica$location <- as.factor(northAmerica$location)
sudAmerica$location <- as.factor(sudAmerica$location)
oceania$location <- as.factor(oceania$location)
class(europe$location)
eu10 <- subset(europe, select = c(location, total_cases_per_million))
#na.rm = borra los NA
eu10 <- eu10 %>%
group_by(location) %>%
summarise(mean_tcpm = mean(total_cases_per_million, na.rm = TRUE)) %>%
arrange(desc(mean_tcpm))
View(eu10)
library(readxl)
africa10 <- africa %>%
group_by(location) %>%
summarise(mean_tcpm = mean(total_cases_per_million, na.rm = TRUE)) %>%
arrange(desc(mean_tcpm))
asia10 <- asia %>%
group_by(location) %>%
summarise(mean_tcpm = mean(total_cases_per_million, na.rm = TRUE)) %>%
arrange(desc(mean_tcpm))
northA10 <- northAmerica %>%
group_by(location) %>%
summarise(mean_tcpm = mean(total_cases_per_million, na.rm = TRUE)) %>%
arrange(desc(mean_tcpm))
sudA10 <- sudAmerica %>%
group_by(location) %>%
summarise(mean_tcpm = mean(total_cases_per_million, na.rm = TRUE)) %>%
arrange(desc(mean_tcpm))
oce10 <- oceania %>%
group_by(location) %>%
summarise(mean_tcpm = mean(total_cases_per_million, na.rm = TRUE)) %>%
arrange(desc(mean_tcpm))
View(africa10)
View(asia)
View(africa10)
View(africa10)
data <- read.csv("covidCleanObesity.csv")
data <- read.csv("covidCleanObesity.csv")
library(readr);
library(tidyverse)
data <- read.csv("covidCleanObesity.csv")
data <- read.csv("covidCleanObesity.csv")
setwd("~/Desktop/MVTEC/Statistical Programming/projecte/MVTEC-Stats-Project1/preProcessingData")
library(readr);
library(tidyverse)
data <- read.csv("covidCleanObesity.csv")
head(data)   # mostrar 10 1es files cada colm
names(data)  # mostrar nom colm
View(data)
View(data)
data <- subset(data, select = -c(X)
head(data)   # mostrar 10 1es files cada colm
data <- subset(data, select = -c(X))
head(data)   # mostrar 10 1es files cada colm
names(data)  # mostrar nom colm
top10 <- filter(data, location %in% c("Cape Verde", "South Africa", "Djibouti", "Sao Tome and Principe", "Libya", "Gabon", "Swaziland", "Equatorial Guinea", "Morocco", "Namibia",
"Qatar", "Bahrain", "Kuwait", "Armenia", "Israel", "Oman", "Maldives", "Singapore", "Saudi Arabia", "United Arab Emirates",
"Andorra", "San Marino", "Vatican", "Luxembourg", "Montenegro", "Belgium", "Spain", "Czech Republic", "Moldova", "Switzerland",
"Panama", "United States", "Costa Rica", "Dominican Republic", "Bahamas", "Honduras", "Mexico", "Belize", "Canada", "Guatemala",
"Australia", "New Zealand", "Marshall Islands", "Papua New Guinea", "Fiji", "Solomon Islands", "Vanuatu",
"Chile", "Peru", "Brazil", "Argentina", "Colombia", "Bolivia", "Ecuador", "Suriname", "Paraguay", "Guyana"))
View(top10)
top10$location
summarize(top10$location)
summarise(top10$location)
table(top10$location)
